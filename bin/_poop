#!/bin/bash

function do_ {
  true
}

function directory {
  _poop_name="$1"; shift
  _poop_resource="directory"
}

function do_directory {
  : ${_poop_action:=create}
  : ${_poop_path:=${_poop_name}}
  : ${_poop_recursive:=false}

  eval "do_${_poop_resource}_${_poop_action}"
}

function do_directory_create {
  # since install -d recursively creates directories, check for intermediate
  # directories manually when recursion is not desired
  if [[ "$_poop_recursive" = false ]]; then
    local dname="$(dirname "${_poop_path}")"
    if [[ ! -d "$dname" ]]; then
      logger_fatal "while creating ${_poop_path}, $dname is not a directory"
      exit 1
    fi
  fi

  install -v -d $(install_options)"${_poop_path}"
}

function do_directory_delete {
  if [[ "$_poop_recursive" = false ]]; then
    rm -vd  "${_poop_path}"
  else
    rm -vrf "${_poop_path}"
  fi
}

function end_ {
  true
}

_last_end="end_"

function mkattr {
  local attr="$1"; shift
  local attrdef="${1:-}"
  local dollar='$'

  eval "_poop_${attr}="
  eval "function ${attr} { _poop_${attr}="${dollar}1"; shift; }"
  eval "function end_${attr} { _poop_${attr}=; ${_last_end}=${attrdef}; }"
  _last_end="end_${attr}"
}

function end {
  eval "do_${_poop_resource}"
  eval "${_last_end}"

  _poop_ignore_failure=false
  _poop_retries=0
  _poop_retry_delay=2
}

function install_options {
  if [[ -n "$_poop_mode" ]]; then
    echo -n "-m $_poop_mode "
  fi

  if [[ -n "$_poop_owner" ]]; then
    echo -n "-o $_poop_owner"
  fi

  if [[ -n "$_poop_group" ]]; then
    echo -n "-g $_poop_group"
  fi
}

function recipe {
  local nm_recipe="$1"; shift
  set --
  source "$shome/recipes/$nm_recipe"
}

mkattr resource
mkattr ignore_failure false
mkattr provider 
mkattr retries 0
mkattr retry_delay 2
mkattr supports
mkattr action 
mkattr recursive
mkattr mode 
mkattr owner 
mkattr group
mkattr path

end
